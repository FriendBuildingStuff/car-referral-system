name: Deploy next.js app to docker hub

on:
  push:
    branches: 
      - main
      

jobs:
  build_and_deploy_to_docker_hub:
    runs-on: ubuntu-latest

    env:
          DISABLE_ESLINT: true

    steps:
       - name: Checkout code
         uses: actions/checkout@v3

       - name: Login to Docker Hub
         uses: docker/login-action@v2
         with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

       - name: Build and push Docker image
         uses: docker/build-push-action@v4
         with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nextjs-app:latest
            ${{ secrets.DOCKER_USERNAME }}/nextjs-app:${{ github.sha }}
          build-args: |
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            VAPID_PUBLIC_KEY=${{ secrets.VAPID_PUBLIC_KEY }}
            VAPID_PRIVATE_KEY=${{ secrets.VAPID_PRIVATE_KEY }}
            VAPID_EMAIL=${{ secrets.VAPID_EMAIL }}
            NEXT_PUBLIC_SITE_URL=${{ secrets.NEXT_PUBLIC_SITE_URL }}
            CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            DATABASE_URL_UNPOOLED=${{ secrets.DATABASE_URL_UNPOOLED }}
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
            NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL }}
            NEXT_PUBLIC_CLERK_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
            NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL }}
            NEXT_PUBLIC_CLERK_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
            PGDATABASE=${{ secrets.PGDATABASE }}
            PGHOST=${{ secrets.PGHOST }}
            PGHOST_UNPOOLED=${{ secrets.PGHOST_UNPOOLED }}
            PGPASSWORD=${{ secrets.PGPASSWORD }}
            PGUSER=${{ secrets.PGUSER }}
            POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_PRISMA_URL=${{ secrets.POSTGRES_PRISMA_URL }}
            POSTGRES_URL=${{ secrets.POSTGRES_URL }}
            POSTGRES_URL_NON_POOLING=${{ secrets.POSTGRES_URL_NON_POOLING }}
            POSTGRES_URL_NO_SSL=${{ secrets.POSTGRES_URL_NO_SSL }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            VERCEL_OIDC_TOKEN=${{ secrets.VERCEL_OIDC_TOKEN }}
            VAPID_PUBLIC_KEY=${{ secrets.VAPID_PUBLIC_KEY }}
            VAPID_PRIVATE_KEY=${{ secrets.VAPID_PRIVATE_KEY }}
            VAPID_EMAIL=${{ secrets.VAPID_EMAIL }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_deploy_to_docker_hub
    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker system prune -af --volumes
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nextjs-app:latest
            sudo docker stop nextjs-app || true
            sudo docker rm nextjs-app || true
            sudo docker run -d --name nextjs-app -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/nextjs-app:latest