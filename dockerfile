FROM node:20-alpine AS base

# Set the working directory
WORKDIR /app

# Copy the package.json and package-lock.json (if available)
COPY package*.json ./

# Install the dependencies
RUN npm install

FROM node:20 AS build
WORKDIR /app
COPY --from=base /app/node_modules ./node_modules
# Copy the rest of the application code
COPY . .

# Accept build arguments
ARG NEXT_PUBLIC_SUPABASE_URL
ARG NEXT_PUBLIC_SUPABASE_ANON_KEY
ARG NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
ARG CLERK_SECRET_KEY
ARG VAPID_PUBLIC_KEY
ARG VAPID_PRIVATE_KEY
ARG VAPID_EMAIL
ARG NEXT_PUBLIC_SITE_URL
ARG DATABASE_URL
ARG DATABASE_URL_UNPOOLED
ARG NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL
ARG NEXT_PUBLIC_CLERK_SIGN_IN_URL
ARG NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL
ARG NEXT_PUBLIC_CLERK_SIGN_UP_URL
ARG PGDATABASE
ARG PGHOST
ARG PGHOST_UNPOOLED
ARG PGPASSWORD
ARG PGUSER
ARG POSTGRES_DATABASE
ARG POSTGRES_HOST
ARG POSTGRES_PASSWORD
ARG POSTGRES_PRISMA_URL
ARG POSTGRES_URL
ARG POSTGRES_URL_NON_POOLING
ARG POSTGRES_URL_NO_SSL
ARG POSTGRES_USER
ARG VERCEL_OIDC_TOKEN

# Set environment variables from build arguments
ENV NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL
ENV NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY
ENV NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
ENV CLERK_SECRET_KEY=$CLERK_SECRET_KEY
ENV VAPID_PUBLIC_KEY=$VAPID_PUBLIC_KEY
ENV VAPID_PRIVATE_KEY=$VAPID_PRIVATE_KEY
ENV VAPID_EMAIL=$VAPID_EMAIL
ENV NEXT_PUBLIC_SITE_URL=$NEXT_PUBLIC_SITE_URL
ENV DATABASE_URL=$DATABASE_URL
ENV DATABASE_URL_UNPOOLED=$DATABASE_URL_UNPOOLED
ENV NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL=$NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL
ENV NEXT_PUBLIC_CLERK_SIGN_IN_URL=$NEXT_PUBLIC_CLERK_SIGN_IN_URL
ENV NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL=$NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL
ENV NEXT_PUBLIC_CLERK_SIGN_UP_URL=$NEXT_PUBLIC_CLERK_SIGN_UP_URL
ENV PGDATABASE=$PGDATABASE
ENV PGHOST=$PGHOST
ENV PGHOST_UNPOOLED=$PGHOST_UNPOOLED
ENV PGPASSWORD=$PGPASSWORD
ENV PGUSER=$PGUSER
ENV POSTGRES_DATABASE=$POSTGRES_DATABASE
ENV POSTGRES_HOST=$POSTGRES_HOST
ENV POSTGRES_PASSWORD=$POSTGRES_PASSWORD
ENV POSTGRES_PRISMA_URL=$POSTGRES_PRISMA_URL
ENV POSTGRES_URL=$POSTGRES_URL
ENV POSTGRES_URL_NON_POOLING=$POSTGRES_URL_NON_POOLING
ENV POSTGRES_URL_NO_SSL=$POSTGRES_URL_NO_SSL
ENV POSTGRES_USER=$POSTGRES_USER
ENV VERCEL_OIDC_TOKEN=$VERCEL_OIDC_TOKEN 



# Set environment variable to disable ESLint during build
ENV DISABLE_ESLINT=true



# Build the app
RUN npm run build

# Expose the port (optional, based on your app)
EXPOSE 3000

# Command to run the application (optional, based on your app)
CMD ["npm", "start"]
